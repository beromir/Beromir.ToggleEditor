{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.11/node_modules/@neos-project/neos-ui-extensibility/src/readFromConsumerApi.ts", "../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.11/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/react/index.js", "../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.11/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/prop-types/index.js", "../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.11/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/neos-ui-redux-store/index.js", "../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.11/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/neos-ui-decorators/index.js", "../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.11/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/react-redux/index.js", "../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.11/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/react-ui-components/index.js", "../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.11/node_modules/@neos-project/neos-ui-extensibility/src/index.ts", "../../node_modules/.pnpm/@neos-project+positional-array-sorter@8.3.11/node_modules/@neos-project/positional-array-sorter/src/positionalArraySorter.ts", "../Private/Editor/ToggleEditor/index.jsx", "../../node_modules/.pnpm/carbon-neos-loadinganimation@1.1.1_@neos-project+neos-ui-extensibility@8.3.11/node_modules/carbon-neos-loadinganimation/src/LoadingWithStyles.jsx", "../../node_modules/.pnpm/carbon-neos-loadinganimation@1.1.1_@neos-project+neos-ui-extensibility@8.3.11/node_modules/carbon-neos-loadinganimation/src/Elements.jsx", "../Private/Editor/ToggleEditor/Components/Icons.jsx", "../../node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs", "../Private/Editor/ToggleEditor/utils.js", "../Private/Editor/ToggleEditor/Components/PreviewImage.jsx", "../Private/Editor/ToggleEditor/Components/SinglePreview.jsx", "../Private/Editor/ToggleEditor/Components/Wrapper.jsx", "../Private/Editor/manifest.js"],
  "sourcesContent": [null, null, null, null, null, null, null, null, null, "import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { selectors } from \"@neos-project/neos-ui-redux-store\";\nimport { neos } from \"@neos-project/neos-ui-decorators\";\nimport positionalArraySorter from \"@neos-project/positional-array-sorter\";\nimport { connect } from \"react-redux\";\nimport Loading from \"carbon-neos-loadinganimation/LoadingWithStyles\";\nimport { Button, Icon, Label, CheckBox } from \"@neos-project/react-ui-components\";\nimport { Icons, PreviewImage, Wrapper } from \"./Components\";\nimport { flattenValues, processColorValues, getItemVariants } from \"./utils\";\nimport clsx from \"clsx\";\nimport style from \"./style.module.css\";\n\nconst getDataLoaderOptionsForProps = (props) => ({\n    contextNodePath: props.focusedNodePath,\n    dataSourceIdentifier: props.options.dataSourceIdentifier,\n    dataSourceUri: props.options.dataSourceUri,\n    dataSourceAdditionalData: props.options.dataSourceAdditionalData,\n    dataSourceDisableCaching: Boolean(props.options.dataSourceDisableCaching),\n});\n\nconst defaultOptions = {\n    layout: \"grid\",\n    maximalColumns: 4,\n    values: {},\n    columns: null,\n    allowEmpty: false,\n    emptyValue: \"\",\n    multiple: false,\n    iconSize: null,\n    disabled: false,\n    hidden: false,\n    dataSourceIdentifier: null,\n    dataSourceUri: null,\n};\n\nfunction Editor(props) {\n    const mergedOptions = { ...defaultOptions, ...props.options };\n    const {\n        layout,\n        values,\n        columns,\n        maximalColumns,\n        emptyValue,\n        iconSize,\n        disabled,\n        dataSourceIdentifier,\n        dataSourceUri,\n        dataSourceAdditionalData,\n        multiple,\n    } = mergedOptions;\n    const allowEmpty = multiple || mergedOptions.allowEmpty;\n    const { value, commit, highlight, i18nRegistry, id, dataSourcesDataLoader, renderHelpIcon } = props;\n    const label = i18nRegistry.translate(props.label);\n    const [savedValue, setSavedValue] = useState([]);\n\n    useEffect(() => {\n        // This allows us to get the value stored in the content repository\n        if (!highlight) {\n            setSavedValue(Array.isArray(value) ? value : [value]);\n        }\n    }, [highlight]);\n\n    if (multiple && !Array.isArray(value)) {\n        console.warn(\n            `Misconfiguration in property \"${props.identifier}\". Multiple is activated but value type seems to be \"string\" but should be \"array\".`,\n        );\n    }\n\n    const hasDataSource = !!(dataSourceIdentifier || dataSourceUri);\n\n    const [isLoading, setIsLoading] = useState(hasDataSource);\n    const [options, setOptions] = useState(hasDataSource ? [] : flattenValues(values, layout, i18nRegistry));\n    const [active, setActive] = useState(Array.isArray(value) ? value : [value]);\n\n    // We use this hack to prevent the editor from re-rendering all the time, even if the options are the same.\n    const [dataSourceOptionsAsJSON, setDataSourceOptionsAsJSON] = useState(null);\n\n    useEffect(() => {\n        const dataAsJSON = JSON.stringify({ dataSourceIdentifier, dataSourceUri, dataSourceAdditionalData });\n        if (!hasDataSource || dataSourceOptionsAsJSON === dataAsJSON) {\n            return;\n        }\n\n        setDataSourceOptionsAsJSON(dataAsJSON);\n\n        // Load options from data source\n        dataSourcesDataLoader.resolveValue(getDataLoaderOptionsForProps(props), value).then((values) => {\n            setIsLoading(false);\n            if (values.hidden) {\n                setOptions({ hidden: true });\n                return;\n            }\n\n            // Add key to values\n            values = values.map((item) => ({ key: item.value == \"\" ? \"__empty__\" : item.value, ...item }));\n\n            if (layout === \"color\") {\n                setOptions(processColorValues(values));\n                return;\n            }\n            setOptions(values);\n        });\n    }, [dataSourceIdentifier, dataSourceUri, dataSourceAdditionalData]);\n\n    if (isLoading) {\n        return (\n            <Wrapper id={id} label={label} renderHelpIcon={renderHelpIcon}>\n                <Loading isLoading={isLoading} title=\"Beromir.ToggleEditor:Main:loading\" />\n            </Wrapper>\n        );\n    }\n\n    if (options.hidden) {\n        return null;\n    }\n\n    if (!options || !options.length) {\n        return (\n            <Wrapper id={id} label={label} className={style.error} renderHelpIcon={renderHelpIcon}>\n                {i18nRegistry.translate(\n                    `Beromir.ToggleEditor:Main:error.${hasDataSource ? \"noDataFromSource\" : \"noNodeTypeDefintion\"}`,\n                )}\n            </Wrapper>\n        );\n    }\n\n    function highlightItem(item) {\n        // We need to compare the active with the saved value, as hightlight doesn't work with the arrays\n        if (JSON.stringify(active) === JSON.stringify(savedValue)) {\n            return false;\n        }\n\n        const valueIsInSaved = savedValue.includes(item.value);\n\n        // No value is active, so we highlight it if it is in the saved value\n        if (!active.length) {\n            return valueIsInSaved;\n        }\n\n        const valueIsActive = itemIsActive(item);\n\n        // If the value is a string, we can just use the active value\n        if (!multiple) {\n            return valueIsActive;\n        }\n\n        return (valueIsActive && !valueIsInSaved) || (valueIsInSaved && !valueIsActive);\n    }\n\n    function itemIsActive(item) {\n        return active.includes(item.value);\n    }\n\n    function onChange(item, node) {\n        if (node) {\n            node.blur();\n        }\n        if (!item) {\n            // No item is set, so we reset the value\n            // This should not happen, but we handle it anyway\n            commit(multiple ? [] : emptyValue);\n            setActive([]);\n            return;\n        }\n\n        const valueFromItem = item.value;\n\n        // we'd like to have a copy instead of ref\n        let activeItems = [...active];\n        const valueIsAlreadyActive = activeItems.includes(valueFromItem);\n        if (!multiple) {\n            // Toggle single value\n            activeItems = valueIsAlreadyActive ? [] : [valueFromItem];\n        } else if (valueIsAlreadyActive) {\n            activeItems.splice(activeItems.indexOf(valueFromItem), 1);\n        } else {\n            activeItems.push(valueFromItem);\n        }\n\n        // if allowEmpty is false but new active length will be 0, drop changes\n        if (!allowEmpty && activeItems.length === 0) {\n            return;\n        }\n\n        setActive(activeItems);\n\n        // if multiple is disabled, we return array the first value\n        if (!multiple) {\n            activeItems = activeItems[0] || emptyValue;\n        }\n        commit(activeItems);\n    }\n\n    const convertToColumns = (value, maximalColumns = 0) => {\n        if (typeof value === \"number\" && value > 0) {\n            return value;\n        }\n        const items = options.length || 1;\n        if (!value || typeof value !== \"string\") {\n            return items;\n        }\n        try {\n            value = value.replaceAll(\"{items}\", items);\n            if (maximalColumns) {\n                value = value.replaceAll(\"{maximalColumns}\", items);\n            }\n            // eslint-disable-next-line no-new-func\n            const evaluateFn = new Function(`return Math.floor(${value})`);\n            return evaluateFn();\n        } catch (e) {\n            console.warn('An error occurred while trying to evaluate \"' + value + '\"\\n', e);\n        }\n    };\n\n    const getColumns = () => {\n        const evaluatedColumns = convertToColumns(columns, maximalColumns);\n        const evaluatedMaximalColumns = convertToColumns(maximalColumns);\n        return { \"--columns\": Math.min(evaluatedColumns, evaluatedMaximalColumns) };\n    };\n\n    const resetLabel = i18nRegistry.translate(\"Beromir.ToggleEditor:Main:reset\");\n    const AllowEmptyIcon = ({ item, className = style.allowEmpty }) =>\n        allowEmpty && !multiple ? (\n            <span className={clsx(className, itemIsActive(item) && style.allowEmptyShow)}>\n                <Icon size=\"sm\" icon=\"times\" />\n            </span>\n        ) : null;\n\n    return (\n        <Wrapper\n            id={id}\n            label={label}\n            className={[style[layout], disabled && style.disabled]}\n            style={getColumns()}\n            renderHelpIcon={renderHelpIcon}\n        >\n            {positionalArraySorter(options).map((item, index) => {\n                const isCurrent = itemIsActive(item);\n                const disabled = item.disabled;\n                const state = isCurrent ? \"active\" : \"default\";\n\n                const labels = getItemVariants(item, \"label\", true, (value) => i18nRegistry.translate(value));\n                const descriptions = getItemVariants(item, \"description\", true, (value) =>\n                    i18nRegistry.translate(value),\n                );\n                const label = labels?.[state];\n                const description = descriptions?.[state];\n\n                const title = description || label;\n                const ariaLabel = isCurrent && allowEmpty ? resetLabel : title;\n                const highlightStyle = highlightItem(item) && style.highlight;\n\n                switch (layout) {\n                    case \"list\":\n                        if (multiple) {\n                            return (\n                                <Label\n                                    className={clsx(style.listButton, highlightStyle)}\n                                    title={title}\n                                    aria-label={ariaLabel}\n                                    key={index}\n                                >\n                                    <CheckBox\n                                        isChecked={isCurrent}\n                                        disabled={disabled}\n                                        onChange={() => onChange(item)}\n                                    />\n                                    <Icons item={item} isCurrent={isCurrent} size={iconSize} />\n                                    <PreviewImage item={item} isCurrent={isCurrent} />\n                                    {label && <span className={style.flex1}>{label}</span>}\n                                </Label>\n                            );\n                        }\n\n                        return (\n                            <button\n                                onClick={({ currentTarget }) => onChange(item, currentTarget)}\n                                type=\"button\"\n                                title={title}\n                                aria-label={ariaLabel}\n                                disabled={disabled}\n                                className={clsx(style.listButton, isCurrent && style.selected, highlightStyle)}\n                                key={index}\n                            >\n                                <span className={style.radio}>\n                                    <span></span>\n                                </span>\n                                <Icons item={item} isCurrent={isCurrent} size={iconSize} />\n                                <PreviewImage item={item} isCurrent={isCurrent} />\n                                {label && <span className={style.flex1}>{label}</span>}\n                                <AllowEmptyIcon item={item} className={style.allowEmptyRadio} />\n                            </button>\n                        );\n\n                    case \"color\":\n                        const maxColorIndex = item.color.length - 1;\n                        return (\n                            <div className={style.colorBox} key={index}>\n                                <button\n                                    onClick={({ currentTarget }) => onChange(item, currentTarget)}\n                                    type=\"button\"\n                                    title={title}\n                                    aria-label={ariaLabel}\n                                    disabled={disabled}\n                                    className={clsx(style.colorButton, isCurrent && style.selected, highlightStyle)}\n                                >\n                                    {item.color.map((color, index) => (\n                                        <span\n                                            key={`color-${index}`}\n                                            className={clsx(\n                                                style.colorPreview,\n                                                color === \"transparent\" && style.colorTransparent,\n                                                maxColorIndex === index && style.colorPreviewLast,\n                                            )}\n                                            style={{ backgroundColor: color }}\n                                        />\n                                    ))}\n                                    <AllowEmptyIcon item={item} />\n                                </button>\n                                {label && (\n                                    <span className={clsx(style.label, disabled && style.disabled)}>{label}</span>\n                                )}\n                            </div>\n                        );\n\n                    default:\n                        return (\n                            <Button\n                                onClick={() => onChange(item)}\n                                isActive={isCurrent}\n                                title={title}\n                                aria-label={ariaLabel}\n                                disabled={disabled}\n                                className={clsx(style.button, highlightStyle)}\n                                key={index}\n                            >\n                                <Icons item={item} isCurrent={isCurrent} size={iconSize} />\n                                <PreviewImage item={item} isCurrent={isCurrent} />\n                                {label && (\n                                    <span className={clsx(item.icon || item.preview ? style.label : null)}>\n                                        {label}\n                                    </span>\n                                )}\n                                <AllowEmptyIcon item={item} />\n                            </Button>\n                        );\n                }\n            })}\n        </Wrapper>\n    );\n}\n\nEditor.propTypes = {\n    value: PropTypes.string,\n    commit: PropTypes.func.isRequired,\n    i18nRegistry: PropTypes.object.isRequired,\n    options: PropTypes.shape({\n        layout: PropTypes.oneOf([\"grid\", \"flex\", \"flex-start\", \"list\", \"color\"]),\n        columns: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        maximalColumns: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        allowEmpty: PropTypes.bool,\n        emptyValue: PropTypes.string,\n        multiple: PropTypes.bool,\n        iconSize: PropTypes.oneOf([\"xs\", \"sm\", \"lg\", \"2x\", \"3x\"]),\n        values: PropTypes.objectOf(\n            PropTypes.shape({\n                label: PropTypes.string,\n                icon: PropTypes.string,\n                iconRotate: PropTypes.number,\n                description: PropTypes.string,\n                color: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n                hidden: PropTypes.bool,\n                preview: PropTypes.string,\n                previewFull: PropTypes.bool,\n                disabled: PropTypes.bool,\n            }),\n        ),\n\n        dataSourceIdentifier: PropTypes.string,\n        dataSourceUri: PropTypes.string,\n        dataSourceDisableCaching: PropTypes.bool,\n        dataSourceAdditionalData: PropTypes.objectOf(PropTypes.any),\n    }).isRequired,\n};\n\nconst neosifier = neos((globalRegistry) => ({\n    i18nRegistry: globalRegistry.get(\"i18n\"),\n    dataSourcesDataLoader: globalRegistry.get(\"dataLoaders\").get(\"DataSources\"),\n}));\nconst connector = connect((state) => ({\n    focusedNodePath: selectors.CR.Nodes.focusedNodePathSelector(state),\n}));\nexport default neosifier(connector(Editor));\n", "import React, { useState, useEffect } from \"react\";\nimport { Circle, Dots } from \"./Elements\";\nimport { neos } from \"@neos-project/neos-ui-decorators\";\n\nconst style = {\n    container: (heightMultiplier = 1) => ({\n        display: \"grid\",\n        gridTemplate: \"'content' 1fr / 1fr\",\n        alignItems: \"center\",\n        justifyItems: \"center\",\n        width: \"100%\",\n        minHeight: `calc(var(--spacing-GoldenUnit) * ${heightMultiplier})`,\n    }),\n    item: (active = false) => ({\n        gridArea: \"content\",\n        transition: \"opacity var(--transition-Default), transform var(--transition-Default) ease\",\n        opacity: active ? 1 : 0,\n        transform: `scale(${active ? 1 : 0})`,\n    }),\n};\n\nfunction Loading({\n    id,\n    title = \"Neos.Neos:Main:loading\",\n    isLoading = false,\n    delayTime = 500,\n    timeoutTime = 5000,\n    i18nRegistry,\n    heightMultiplier = 1,\n}) {\n    const [showLoading, setShowLoading] = useState(0);\n    const translatedTitle = title ? i18nRegistry.translate(title) : null;\n\n    useEffect(() => {\n        if (!isLoading) {\n            setShowLoading(0);\n            return;\n        }\n        const delay = setTimeout(() => {\n            setShowLoading(1);\n        }, delayTime);\n        const timeout = setTimeout(() => {\n            setShowLoading(2);\n        }, delayTime + timeoutTime);\n\n        return () => {\n            clearTimeout(delay);\n            clearTimeout(timeout);\n        };\n    }, [isLoading]);\n\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div id={id} style={style.container(heightMultiplier)} title={translatedTitle}>\n            <Circle style={style.item(showLoading == 1)} />\n            <Dots style={style.item(showLoading == 2)} />\n        </div>\n    );\n}\n\nconst neosifier = neos((globalRegistry) => ({\n    i18nRegistry: globalRegistry.get(\"i18n\"),\n}));\nexport default neosifier(Loading);\n", "import React from \"react\";\n\nexport function Circle({ style, className, size = 30 }) {\n    return (\n        <svg width={size} height={size} stroke=\"currentColor\" viewBox=\"0 0 24 24\" style={style} className={className}>\n            <g>\n                <circle cx=\"12\" cy=\"12\" r=\"9.5\" fill=\"none\" stroke-width=\"2\" stroke-linecap=\"round\">\n                    {[\n                        {\n                            attribute: \"dasharray\",\n                            values: \"0 150;42 150;42 150;42 150\",\n                        },\n                        {\n                            attribute: \"dashoffset\",\n                            values: \"0;-16;-59;-59\",\n                        },\n                    ].map(({ attribute, values }) => (\n                        <animate\n                            key={attribute}\n                            attributeName={`stroke-${attribute}`}\n                            values={values}\n                            dur=\"1.5s\"\n                            calcMode=\"spline\"\n                            keyTimes=\"0;0.475;0.95;1\"\n                            keySplines=\"0.42,0,0.58,1;0.42,0,0.58,1;0.42,0,0.58,1\"\n                            repeatCount=\"indefinite\"\n                        />\n                    ))}\n                </circle>\n                <animateTransform\n                    attributeName=\"transform\"\n                    type=\"rotate\"\n                    dur=\"2s\"\n                    values=\"0 12 12;360 12 12\"\n                    repeatCount=\"indefinite\"\n                />\n            </g>\n        </svg>\n    );\n}\n\nexport function Dots({ style, className, size = 30 }) {\n    return (\n        <svg width={size * 2} height={size} viewBox=\"0 0 24 12\" class={className} style={style}>\n            {[1, 2, 3].map((number) => {\n                const cx = number * 6;\n                const beginn = Math.round((100 / 3) * (number - 1)) / 100;\n                return (\n                    <circle cx={cx} cy=\"6\" r=\"0\" fill=\"currentColor\">\n                        <animate\n                            attributeName=\"r\"\n                            begin={beginn}\n                            calcMode=\"spline\"\n                            dur=\"1.5s\"\n                            keySplines=\"0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8;0.2 0.2 0.4 0.8\"\n                            repeatCount=\"indefinite\"\n                            values=\"0;2;0;0\"\n                        ></animate>\n                    </circle>\n                );\n            })}\n        </svg>\n    );\n}\n", "import React from \"react\";\nimport { Icon } from \"@neos-project/react-ui-components\";\nimport style from \"../style.module.css\";\nimport clsx from \"clsx\";\nimport { getIconConfig } from \"../utils\";\n\nexport default function Icons({ item, size, isCurrent }) {\n    const config = getIconConfig(item);\n    // Nothing is set, so we return null\n    if (!config) {\n        return null;\n    }\n\n    const { state, rotate, needLayering } = config;\n\n    // We have two previews, so we stack them to avoid a jump in the interface\n    if (needLayering) {\n        return (\n            <span className={style.layered}>\n                <Icon\n                    icon={state.default}\n                    className={style.transition}\n                    style={{ opacity: isCurrent ? 0 : 1, transform: rotate?.default }}\n                    size={size}\n                />\n                <Icon\n                    icon={state.active}\n                    className={style.transition}\n                    style={{ opacity: isCurrent ? 1 : 0, transform: rotate?.active }}\n                    size={size}\n                />\n            </span>\n        );\n    }\n\n    // Only the default is set, so show it always\n    if (state.default) {\n        return (\n            <Icon\n                icon={state.default}\n                className={style.transition}\n                style={{ transform: isCurrent ? rotate?.active : rotate?.default }}\n                size={size}\n            />\n        );\n    }\n\n    // Only the active is set, so show it only when active\n    if (state.active && isCurrent) {\n        return <Icon icon={state.active} style={{ transform: rotate?.active }} size={size} />;\n    }\n\n    // Nothing is set, so we return null\n    return null;\n}\n", "function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;", "export const getPreviewConfig = (item) => getIconOrPreviewConfig(\"preview\", item);\nexport const getIconConfig = (item) => getIconOrPreviewConfig(\"icon\", item);\n\nexport function getItemVariants(\n    item,\n    key,\n    activeFallbackToDefault = false,\n    processItem = (value) => value,\n    subkey = \"\",\n) {\n    const activeKey = `${key}Active${subkey}`;\n    const defaultItem = item[key + subkey];\n    let activeItem = item[activeKey];\n\n    if (activeFallbackToDefault && activeItem === undefined) {\n        activeItem = defaultItem;\n    }\n\n    if (defaultItem == undefined && activeItem == undefined) {\n        return null;\n    }\n\n    return {\n        default: processItem(defaultItem),\n        active: processItem(activeItem),\n    };\n}\n\nexport function flattenValues(values, layout) {\n    if (!values || typeof values !== \"object\") {\n        return [];\n    }\n\n    const array = [];\n\n    for (const value in values) {\n        const item = values[value];\n        if (item.hidden) {\n            continue;\n        }\n        array.push({\n            ...item,\n            value,\n            key: value == \"\" ? \"__empty__\" : value,\n        });\n    }\n    if (layout === \"color\") {\n        return processColorValues(array);\n    }\n    return array;\n}\n\nexport function processColorValues(values) {\n    if (!Array.isArray(values)) {\n        return [];\n    }\n    values = values\n        .map((item) => ({\n            ...item,\n            color: processColor(item.color),\n        }))\n        .filter((item) => item.color);\n\n    return values;\n}\n\nfunction processColor(color) {\n    if (!color || (typeof color !== \"string\" && !Array.isArray(color))) {\n        return null;\n    }\n    if (typeof color === \"string\") {\n        return [color];\n    }\n    color = color.filter(Boolean);\n    if (color.length < 1) {\n        return null;\n    }\n    return color;\n}\n\nfunction getIconOrPreviewConfig(type, item) {\n    if (!item) {\n        return null;\n    }\n\n    const state = getItemVariants(item, type);\n    // Nothing is set, so we return null\n    if (!state) {\n        return null;\n    }\n    const needLayering = state.default && state.active;\n    const rotate = getItemVariants(item, type, true, (value) => `rotate(${value || 0}deg)`, \"Rotate\");\n    const label = getItemVariants(\"label\", type, true);\n    const description = getItemVariants(\"description\", true);\n\n    return {\n        type,\n        needLayering,\n        state,\n        label,\n        description,\n        rotate: rotate,\n    };\n}\n", "import React from \"react\";\nimport style from \"../style.module.css\";\nimport SinglePreview from \"./SinglePreview\";\nimport { getPreviewConfig } from \"../utils\";\n\nexport default function PreviewImage({ item, isCurrent }) {\n    const config = getPreviewConfig(item);\n    if (!config) {\n        return null;\n    }\n    const { state, rotate, needLayering, label, description } = config;\n    const fullClass = item.previewFull ? style.imageFull : null;\n\n    // We have two previews, so we stack them to avoid a jump in the interface\n    if (config.needLayering) {\n        return (\n            <span className={style.layered}>\n                <SinglePreview\n                    src={state.default}\n                    className={[style.transition, fullClass]}\n                    style={{ opacity: isCurrent ? 0 : 1, transform: rotate?.default }}\n                    label={description?.default || label?.default}\n                />\n                <SinglePreview\n                    src={state.active}\n                    className={[style.transition, fullClass]}\n                    style={{ opacity: isCurrent ? 1 : 0, transform: rotate?.active }}\n                    label={description?.active || label?.active}\n                />\n            </span>\n        );\n    }\n\n    // Only the default is set, so show it always\n    if (state.default) {\n        return (\n            <SinglePreview\n                src={state.default}\n                className={[style.transition, fullClass]}\n                style={{ transform: isCurrent ? rotate?.active : rotate?.default }}\n                label={description?.default || label?.default}\n            />\n        );\n    }\n\n    // Only the active is set, so show it only when active\n    if (state.active && isCurrent) {\n        return (\n            <SinglePreview\n                src={state.active}\n                className={[style.transition, fullClass]}\n                style={{ transform: rotate?.active }}\n                label={description?.active || label?.active}\n            />\n        );\n    }\n\n    // Nothing is set, so we return null\n    return null;\n}\n", "import React from \"react\";\nimport { neos } from \"@neos-project/neos-ui-decorators\";\nimport style from \"../style.module.css\";\nimport clsx from \"clsx\";\n\nconst neosifier = neos((globalRegistry) => ({\n    i18nRegistry: globalRegistry.get(\"i18n\"),\n}));\nexport default neosifier(SinglePreview);\n\nfunction SinglePreview({ src, className, style, label, i18nRegistry }) {\n    const translatedLabel = i18nRegistry.translate(label);\n    if (src.startsWith(\"<svg \")) {\n        return (\n            <div\n                className={clsx(style.imageSVG, className)}\n                style={style}\n                aria-label={translatedLabel}\n                dangerouslySetInnerHTML={{ __html: src }}\n            />\n        );\n    }\n\n    return (\n        <img\n            className={clsx(style.image, className)}\n            style={style}\n            alt={translatedLabel}\n            src={src.startsWith(\"resource://\") ? `/_Resources/Static/Packages/${src.substr(11)}` : src}\n        />\n    );\n}\n", "import React from \"react\";\nimport { Label } from \"@neos-project/react-ui-components\";\nimport clsx from \"clsx\";\nimport styles from \"../style.module.css\";\n\nexport default function Wrapper({ children, label, id, className, title, style, renderHelpIcon }) {\n    if (!children) {\n        return null;\n    }\n\n    return (\n        <>\n            {label && (\n                <Label htmlFor={id}>\n                    {label} {renderHelpIcon()}\n                </Label>\n            )}\n            <div id={id} className={clsx(styles.wrapper, className)} style={style} title={title}>\n                {children}\n            </div>\n        </>\n    );\n}\n", "import manifest from \"@neos-project/neos-ui-extensibility\";\n\nimport ToggleEditor from \"./ToggleEditor\";\n\nmanifest(\"Beromir.ToggleEditor:Editor\", {}, (globalRegistry) => {\n    const editorsRegistry = globalRegistry.get(\"inspector\").get(\"editors\");\n\n    editorsRegistry.set(\"Beromir.ToggleEditor/Editor\", {\n        component: ToggleEditor,\n        hasOwnLabel: true,\n    });\n});\n"],
  "mappings": "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",
  "names": ["readFromConsumerApi", "key", "args", "init_readFromConsumerApi", "__esmMin", "require_react", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_prop_types", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_neos_ui_redux_store", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_neos_ui_decorators", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_react_redux", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_react_ui_components", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "init_readFromConsumerApi", "positionalArraySorter", "subject", "position", "idKey", "positionAccessor", "value", "indexMapping", "middleKeys", "startKeys", "endKeys", "beforeKeys", "afterKeys", "item", "index", "key", "positionValue", "invalid", "weightMatch", "weight", "match", "reference", "numberPosition", "resultStart", "resultMiddle", "resultEnd", "processedKeys", "sortedWeights", "dict", "asc", "weights", "x", "a", "b", "addToResults", "keys", "result", "beforeWeights", "i", "afterWeights", "positionalArraySorter_default", "dist_default", "readFromConsumerApi", "import_react", "import_prop_types", "import_neos_ui_redux_store", "import_neos_ui_decorators", "import_react_redux", "import_react", "import_react", "Circle", "style", "className", "size", "React", "attribute", "values", "Dots", "number", "cx", "beginn", "import_neos_ui_decorators", "style", "heightMultiplier", "active", "Loading", "id", "title", "isLoading", "delayTime", "timeoutTime", "i18nRegistry", "showLoading", "setShowLoading", "translatedTitle", "delay", "timeout", "React", "Circle", "Dots", "neosifier", "globalRegistry", "LoadingWithStyles_default", "import_react_ui_components", "import_react", "import_react_ui_components", "r", "e", "t", "f", "n", "o", "clsx", "clsx_default", "getPreviewConfig", "item", "getIconOrPreviewConfig", "getIconConfig", "getItemVariants", "key", "activeFallbackToDefault", "processItem", "value", "subkey", "activeKey", "defaultItem", "activeItem", "flattenValues", "values", "layout", "array", "processColorValues", "processColor", "color", "type", "state", "needLayering", "rotate", "label", "description", "Icons", "item", "size", "isCurrent", "config", "getIconConfig", "state", "rotate", "needLayering", "React", "style_default", "import_react", "import_react", "import_neos_ui_decorators", "neosifier", "globalRegistry", "SinglePreview_default", "SinglePreview", "src", "className", "style", "label", "i18nRegistry", "translatedLabel", "React", "clsx_default", "PreviewImage", "item", "isCurrent", "config", "getPreviewConfig", "state", "rotate", "needLayering", "label", "description", "fullClass", "style_default", "React", "SinglePreview_default", "import_react", "import_react_ui_components", "Wrapper", "children", "label", "id", "className", "title", "style", "renderHelpIcon", "React", "clsx_default", "style_default", "getDataLoaderOptionsForProps", "props", "defaultOptions", "Editor", "mergedOptions", "layout", "values", "columns", "maximalColumns", "emptyValue", "iconSize", "disabled", "dataSourceIdentifier", "dataSourceUri", "dataSourceAdditionalData", "multiple", "allowEmpty", "value", "commit", "highlight", "i18nRegistry", "id", "dataSourcesDataLoader", "renderHelpIcon", "label", "savedValue", "setSavedValue", "hasDataSource", "isLoading", "setIsLoading", "options", "setOptions", "flattenValues", "active", "setActive", "dataSourceOptionsAsJSON", "setDataSourceOptionsAsJSON", "dataAsJSON", "item", "processColorValues", "React", "Wrapper", "LoadingWithStyles_default", "style_default", "highlightItem", "valueIsInSaved", "valueIsActive", "itemIsActive", "onChange", "node", "valueFromItem", "activeItems", "valueIsAlreadyActive", "convertToColumns", "items", "e", "getColumns", "evaluatedColumns", "evaluatedMaximalColumns", "resetLabel", "AllowEmptyIcon", "className", "clsx_default", "positionalArraySorter_default", "index", "isCurrent", "state", "labels", "getItemVariants", "descriptions", "title", "ariaLabel", "highlightStyle", "Icons", "PreviewImage", "currentTarget", "maxColorIndex", "color", "PropTypes", "neosifier", "globalRegistry", "connector", "ToggleEditor_default", "dist_default", "globalRegistry", "ToggleEditor_default"]
}
