{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.10/node_modules/@neos-project/neos-ui-extensibility/src/readFromConsumerApi.ts", "../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.10/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/react/index.js", "../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.10/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/prop-types/index.js", "../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.10/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/react-ui-components/index.js", "../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.10/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/neos-ui-decorators/index.js", "../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.10/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/react-redux/index.js", "../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.10/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/neos-ui-redux-store/index.js", "../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.10/node_modules/@neos-project/neos-ui-extensibility/src/index.ts", "../Private/Editor/ToggleEditor/index.jsx", "../../node_modules/.pnpm/clsx@2.1.1/node_modules/clsx/dist/clsx.mjs", "../Private/Editor/manifest.js"],
  "sourcesContent": [null, null, null, null, null, null, null, null, "import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Button, Icon } from \"@neos-project/react-ui-components\";\nimport { neos } from \"@neos-project/neos-ui-decorators\";\nimport style from \"./style.module.css\";\nimport { connect } from \"react-redux\";\nimport { selectors } from \"@neos-project/neos-ui-redux-store\";\nimport clsx from \"clsx\";\n\nconst getDataLoaderOptionsForProps = (props) => ({\n    contextNodePath: props.focusedNodePath,\n    dataSourceIdentifier: props.options.dataSourceIdentifier,\n    dataSourceUri: props.options.dataSourceUri,\n    dataSourceAdditionalData: props.options.dataSourceAdditionalData,\n    dataSourceDisableCaching: Boolean(props.options.dataSourceDisableCaching),\n});\n\nconst defaultOptions = {\n    layout: \"grid\",\n    maximalColumns: 4,\n    values: {},\n    columns: null,\n    allowEmpty: false,\n    iconSize: null,\n    disabled: false,\n    dataSourceIdentifier: null,\n    dataSourceUri: null,\n};\n\n// We use this hack to prevent the editor from re-rendering all the time, even if the options are the same.\nlet mergedOptionsAsJSON = null;\n\nfunction Editor(props) {\n    const mergedOptions = { ...defaultOptions, ...props.options };\n    const {\n        layout,\n        values,\n        columns,\n        maximalColumns,\n        allowEmpty,\n        iconSize,\n        disabled,\n        dataSourceIdentifier,\n        dataSourceUri,\n    } = mergedOptions;\n    const { value, commit, highlight, i18nRegistry, dataSourcesDataLoader } = props;\n\n    const hasDataSource = !!(dataSourceIdentifier || dataSourceUri);\n\n    const [isLoading, setIsLoading] = useState(hasDataSource);\n    const [options, setOptions] = useState(hasDataSource ? [] : flattenValues(values, layout, i18nRegistry));\n\n    useEffect(() => {\n        if (!hasDataSource || mergedOptionsAsJSON === JSON.stringify(mergedOptions)) {\n            return;\n        }\n        mergedOptionsAsJSON = JSON.stringify(mergedOptions);\n\n        // Load options from data source\n        dataSourcesDataLoader.resolveValue(getDataLoaderOptionsForProps(props), value).then((values) => {\n            setIsLoading(false);\n\n            if (layout === \"color\") {\n                setOptions(processColorValues(values));\n                return;\n            }\n            setOptions(values);\n        });\n    }, [mergedOptions]);\n\n    if (isLoading) {\n        return (\n            <div\n                className={clsx(style.wrapper, style.loading)}\n                title={i18nRegistry.translate(\"Beromir.ToggleEditor:Main:loading\")}\n            >\n                <Icon icon=\"spinner\" size=\"lg\" spin />\n            </div>\n        );\n    }\n\n    if (!options || !options.length) {\n        return (\n            <div className={clsx(style.wrapper, style.error)}>\n                {i18nRegistry.translate(\n                    `Beromir.ToggleEditor:Main:error.${hasDataSource ? \"noDataFromSource\" : \"noNodeTypeDefintion\"}`,\n                )}\n            </div>\n        );\n    }\n\n    const resetLabel = i18nRegistry.translate(\"Beromir.ToggleEditor:Main:reset\");\n\n    function onChange(item, node) {\n        if (node) {\n            node.blur();\n        }\n        if (!item || (allowEmpty && value === item.value)) {\n            commit(\"\");\n            return;\n        }\n        commit(item.value);\n    }\n\n    const convertToColumns = (value, maximalColumns = 0) => {\n        if (typeof value === \"number\" && value > 0) {\n            return value;\n        }\n        const items = options.length || 1;\n        if (!value || typeof value !== \"string\") {\n            return items;\n        }\n        try {\n            value = value.replaceAll(\"{items}\", items);\n            if (maximalColumns) {\n                value = value.replaceAll(\"{maximalColumns}\", items);\n            }\n            // eslint-disable-next-line no-new-func\n            const evaluateFn = new Function(`return Math.floor(${value})`);\n            return evaluateFn();\n        } catch (e) {\n            console.warn('An error occurred while trying to evaluate \"' + value + '\"\\n', e);\n        }\n    };\n\n    const getColumns = () => {\n        const evaluatedColumns = convertToColumns(columns, maximalColumns);\n        const evaluatedMaximalColumns = convertToColumns(maximalColumns);\n        return { \"--columns\": Math.min(evaluatedColumns, evaluatedMaximalColumns) };\n    };\n\n    const getIcon = (item) =>\n        item.icon ? (\n            <Icon icon={item.icon} style={{ transform: `rotate(${item.iconRotate || 0}deg)` }} size={iconSize} />\n        ) : null;\n    const getTitle = (item) => i18nRegistry.translate(item.description || item.label);\n    const getAriaLabel = (item) => (allowEmpty && value === item.value ? resetLabel : getTitle(item));\n    const getAllowEmptyIcon = (item, className = style.allowEmpty) =>\n        allowEmpty ? (\n            <div className={clsx(className, value === item.value && style.allowEmptyShow)}>\n                <Icon size=\"sm\" icon=\"times\" />\n            </div>\n        ) : null;\n\n    return (\n        <div className={clsx(style.wrapper, style[layout], disabled && style.disabled)} style={getColumns()}>\n            {options.map((item) => {\n                const isCurrent = value === item.value;\n                const disabled = item.disabled;\n                const label = i18nRegistry.translate(item.label);\n                switch (layout) {\n                    case \"list\":\n                        return (\n                            <button\n                                onClick={({ currentTarget }) => onChange(item, currentTarget)}\n                                type=\"button\"\n                                title={getTitle(item)}\n                                aria-label={getAriaLabel(item)}\n                                disabled={disabled}\n                                className={clsx(style.listButton, isCurrent && style.selected)}\n                            >\n                                <span className={clsx(style.radio, isCurrent && highlight && style.highlight)}>\n                                    <span></span>\n                                </span>\n                                {getIcon(item)}\n                                {getPreview(item, i18nRegistry)}\n                                {label && <span>{label}</span>}\n                                {getAllowEmptyIcon(item, style.allowEmptyRadio)}\n                            </button>\n                        );\n\n                    case \"color\":\n                        const isTransparent = item.color.length === 1 && item.color[0] === \"transparent\";\n                        return (\n                            <div className={style.colorBox}>\n                                <button\n                                    onClick={({ currentTarget }) => onChange(item, currentTarget)}\n                                    type=\"button\"\n                                    title={getTitle(item)}\n                                    aria-label={getAriaLabel(item)}\n                                    disabled={disabled}\n                                    className={clsx(\n                                        style.colorButton,\n                                        isCurrent && (highlight ? style.highlight : style.selected),\n                                        isTransparent && style.colorTransparent,\n                                    )}\n                                    style={getBackgroundColor(item.color)}\n                                >\n                                    {getAllowEmptyIcon(item)}\n                                </button>\n                                {label && (\n                                    <span className={clsx(style.label, disabled && style.disabled)}>{label}</span>\n                                )}\n                            </div>\n                        );\n\n                    default:\n                        return (\n                            <Button\n                                onClick={() => onChange(item)}\n                                isActive={isCurrent}\n                                title={getTitle(item)}\n                                aria-label={getAriaLabel(item)}\n                                disabled={disabled}\n                                className={clsx(style.button, isCurrent && highlight && style.highlight)}\n                            >\n                                {getIcon(item)}\n                                {getPreview(item, i18nRegistry)}\n                                {label && (\n                                    <span className={clsx(item.icon || item.preview ? style.label : null)}>\n                                        {label}\n                                    </span>\n                                )}\n                                {getAllowEmptyIcon(item)}\n                            </Button>\n                        );\n                }\n            })}\n        </div>\n    );\n}\n\nEditor.propTypes = {\n    value: PropTypes.string,\n    commit: PropTypes.func.isRequired,\n    i18nRegistry: PropTypes.object.isRequired,\n    options: PropTypes.shape({\n        layout: PropTypes.oneOf([\"grid\", \"flex\", \"list\", \"color\"]),\n        columns: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        maximalColumns: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        allowEmpty: PropTypes.bool,\n        iconSize: PropTypes.oneOf([\"xs\", \"sm\", \"lg\", \"2x\", \"3x\"]),\n        values: PropTypes.objectOf(\n            PropTypes.shape({\n                label: PropTypes.string,\n                icon: PropTypes.string,\n                iconRotate: PropTypes.number,\n                description: PropTypes.string,\n                color: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n                hidden: PropTypes.bool,\n                preview: PropTypes.string,\n                previewFull: PropTypes.bool,\n                disabled: PropTypes.bool,\n            }),\n        ),\n\n        dataSourceIdentifier: PropTypes.string,\n        dataSourceUri: PropTypes.string,\n        dataSourceDisableCaching: PropTypes.bool,\n        dataSourceAdditionalData: PropTypes.objectOf(PropTypes.any),\n    }).isRequired,\n};\n\nfunction processColorValues(values) {\n    if (!Array.isArray(values)) {\n        return [];\n    }\n    values = values\n        .map((item) => ({\n            ...item,\n            color: processColor(item.color),\n        }))\n        .filter((item) => item.color);\n\n    return values;\n}\n\nfunction processColor(color) {\n    if (!color || (typeof color !== \"string\" && !Array.isArray(color))) {\n        return null;\n    }\n    if (typeof color === \"string\") {\n        return [color];\n    }\n    color = color.filter(Boolean);\n    if (color.length < 1) {\n        return null;\n    }\n    return color;\n}\n\nfunction getBackgroundColor(color) {\n    const numberOfColors = color.length;\n    if (numberOfColors === 1) {\n        return { backgroundColor: color[0] };\n    }\n\n    // Genertate a gradient with hard stops\n    let previousColor = \"\";\n    const gradient = [];\n    color.forEach((color, index) => {\n        const stop = `${Math.round((index / numberOfColors) * 100)}%`;\n        if (previousColor) {\n            gradient.push(`${previousColor} ${stop}`);\n        }\n        previousColor = color;\n        gradient.push(`${color} ${stop}`);\n    });\n    gradient.push(`${previousColor} 100%`);\n\n    return {\n        backgroundImage: `linear-gradient(90deg, ${gradient.join(\", \")})`,\n    };\n}\n\nfunction getPreview(item, i18nRegistry) {\n    if (!item || !item.preview) {\n        return null;\n    }\n    const preview = item.preview;\n    const fullClass = item.previewFull ? style.imageFull : null;\n    const label = i18nRegistry.translate(item.description || item.label);\n\n    if (preview.startsWith(\"<svg \")) {\n        return (\n            <div\n                className={clsx(style.imageSVG, fullClass)}\n                aria-label={label}\n                dangerouslySetInnerHTML={{ __html: preview }}\n            />\n        );\n    }\n\n    const src = preview.startsWith(\"resource://\") ? `/_Resources/Static/Packages/${preview.substr(11)}` : preview;\n    return <img src={src} className={clsx(style.image, fullClass)} alt={label} />;\n}\n\nfunction flattenValues(values, layout, i18nRegistry) {\n    if (!values || typeof values !== \"object\") {\n        return [];\n    }\n\n    const array = [];\n\n    for (const value in values) {\n        const item = values[value];\n        if (item.hidden) {\n            continue;\n        }\n        array.push({\n            ...item,\n            value,\n        });\n    }\n    if (layout === \"color\") {\n        return processColorValues(array);\n    }\n    return array;\n}\n\nconst neosifier = neos((globalRegistry) => ({\n    i18nRegistry: globalRegistry.get(\"i18n\"),\n    dataSourcesDataLoader: globalRegistry.get(\"dataLoaders\").get(\"DataSources\"),\n}));\nconst connector = connect((state) => ({\n    focusedNodePath: selectors.CR.Nodes.focusedNodePathSelector(state),\n}));\nexport default neosifier(connector(Editor));\n", "function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;", "import manifest from \"@neos-project/neos-ui-extensibility\";\n\nimport ToggleEditor from \"./ToggleEditor\";\n\nmanifest(\"Beromir.ToggleEditor:Editor\", {}, (globalRegistry) => {\n    const editorsRegistry = globalRegistry.get(\"inspector\").get(\"editors\");\n\n    editorsRegistry.set(\"Beromir.ToggleEditor/Editor\", {\n        component: ToggleEditor,\n    });\n});\n"],
  "mappings": "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",
  "names": ["readFromConsumerApi", "key", "args", "init_readFromConsumerApi", "__esmMin", "require_react", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_prop_types", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_react_ui_components", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_neos_ui_decorators", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_react_redux", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_neos_ui_redux_store", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "init_readFromConsumerApi", "dist_default", "readFromConsumerApi", "import_react", "import_prop_types", "import_react_ui_components", "import_neos_ui_decorators", "import_react_redux", "import_neos_ui_redux_store", "r", "e", "t", "f", "n", "o", "clsx", "clsx_default", "getDataLoaderOptionsForProps", "props", "defaultOptions", "mergedOptionsAsJSON", "Editor", "mergedOptions", "layout", "values", "columns", "maximalColumns", "allowEmpty", "iconSize", "disabled", "dataSourceIdentifier", "dataSourceUri", "value", "commit", "highlight", "i18nRegistry", "dataSourcesDataLoader", "hasDataSource", "isLoading", "setIsLoading", "options", "setOptions", "flattenValues", "processColorValues", "React", "clsx_default", "style_default", "resetLabel", "onChange", "item", "node", "convertToColumns", "items", "e", "getColumns", "evaluatedColumns", "evaluatedMaximalColumns", "getIcon", "getTitle", "getAriaLabel", "getAllowEmptyIcon", "className", "isCurrent", "label", "currentTarget", "getPreview", "isTransparent", "getBackgroundColor", "PropTypes", "processColor", "color", "numberOfColors", "previousColor", "gradient", "index", "stop", "preview", "fullClass", "src", "array", "neosifier", "globalRegistry", "connector", "state", "ToggleEditor_default", "dist_default", "globalRegistry", "ToggleEditor_default"]
}
