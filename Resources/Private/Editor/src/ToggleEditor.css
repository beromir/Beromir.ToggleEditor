/* States */

.loading {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 40px;
}

.highlight {
    outline: #ff8700 solid 2px;
    outline-offset: 2px;
    z-index: 2;
    border-radius: 2px;
}

:where(.grid, .flex, .color, .list) [disabled],
.disabled {
    cursor: not-allowed !important;
    opacity: 0.65 !important;

    & > * {
        pointer-events: none;
    }
}

.error {
    background-color: #ff460d;
    color: #fff;
    margin-left: -16px;
    margin-right: -16px;
    padding: 10px 16px;
}

/* Layouts */

.wrapper {
    user-select: none;
}

.flex {
    display: flex;
    gap: 1px;
    background-color: #525252;

    & > * {
        flex: auto;
    }
}

.color {
    display: grid;
    row-gap: 14px;
    column-gap: 8px;
    padding-top: 4px;
    grid-template-columns: repeat(var(--columns, 1), minmax(0, 1fr));
}

.grid {
    display: grid;
    gap: 1px;
    background-color: #525252;
    grid-template-columns: repeat(var(--columns, 1), minmax(0, 1fr));
}

.list {
    display: grid;
    gap: 12px;
    grid-template-columns: repeat(1, minmax(0, 1fr));

    & .image {
        width: auto;
        height: 1em;
        margin-right: 8px;
    }
}


/* Image */

.image {
    width: 100%;
    height: auto;
}

.imageSVG {
    width: 100%;
    display: flex;
    align-items: stretch;
    justify-content: stretch;
}

/* List button */

.listButton {
    display: flex;
    align-items: center;
    width: fit-content;
    color: #fff;
    background-color: inherit;
    border: none;
    border-radius: 0;
    cursor: pointer;

    &:focus {
        outline: none;

        & .radio {
            outline: #00adee solid 1px;
        }
    }

    &:where(.selected,:hover:not([disabled])) .radio {
        background-color: #00adee;
    }

    & svg {
        margin-right: 8px;
    }
}

/* Radio components */

.radio {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-right: 12px;
    width: 22px;
    height: 22px;
    border-radius: 9999px;
    border: none;
    background-color: #525252;
    pointer-events: none;

    & span {
        width: 6px;
        height: 6px;
        background-color: #fafafa;
        border-radius: 9999px;
    }
}

/* Color items */

.colorBox {
    display: flex;
    flex-direction: column;
    align-items: center;
    row-gap: 4px;
}

.colorButton {
    cursor: pointer;
    width: 100%;
    height: 40px;
    max-width: 60px;
    border: none;
    border-radius: 4px;

    &:where(:hover:not([disabled]),:focus,.selected) {
        outline: #00adee solid 2px;
        outline-offset: 2px;
    }

    &:focus {
        outline-offset: 1px;
        outline-width: 1px;
    }
}

.colorTransparent {
    background-size: 14px;
    background-image: url('data:image/svg+xml, <svg width="100" height="100" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="100" height="100" fill="%23F5F5F5"/><rect width="50" height="50" fill="%23d4d4d4"/><rect x="50" y="50" width="50" height="50" fill="%23d4d4d4"/></svg>');
}

/* General items */

.button {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 12px;
    height: auto;

    & > * + * {
        margin-top: 6px;
    }

    &:focus {
        outline: #00adee solid 1px;
        z-index: 1;
        border-radius: 2px;
    }

    & .imageFull:only-child {
        margin: -12px;
    }
}

.label {
    font-size: 0.75rem;
}

/* Allow empty */

.allowEmpty,
.allowEmptyRadio {
    position: absolute;
    z-index: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 20px;
    height: 20px;
    margin: 0 !important;
    transition: opacity 0.2s;
    pointer-events: none;
    opacity: 0;
    right: 0;

    & svg {
        color: #fff;
    }
}

.allowEmpty {
    top: 0;
    background-color: #525252;
    border-radius: 50%;
    transform: translate(50%, -50%);
}

:where(.grid, .flex, .color) button {
    position: relative;

    &:is(:hover:not([disabled]),:focus) .allowEmpty {
        opacity: 1;
    }
}

.list {
    position: relative;

    & button:is(:hover:not([disabled]),:focus) .allowEmptyRadio {
        opacity: 1;
    }
}
